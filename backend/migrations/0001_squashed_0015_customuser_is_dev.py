# Generated by Django 5.0.1 on 2024-02-15 19:20

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('backend', '0001_initial'), ('backend', '0002_tournament_leaderboard'), ('backend', '0003_tournament_leaderboard'), ('backend', '0004_alter_tournament_players_count'), ('backend', '0005_user_photo_url'), ('backend', '0006_alter_user_photo_url'), ('backend', '0007_rename_photo_url_user_photo_medium_url_and_more'), ('backend', '0008_customuser_alter_tournament_host_delete_user'), ('backend', '0009_alter_customuser_name'), ('backend', '0010_alter_customuser_list'), ('backend', '0011_customuser_is_42_authenticated'), ('backend', '0012_alter_customuser_options_alter_customuser_managers_and_more'), ('backend', '0013_alter_customuser_managers'), ('backend', '0014_remove_customuser_is_42_authenticated'), ('backend', '0015_customuser_is_dev')]

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UsersList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('join_date', models.DateField(auto_now_add=True)),
                ('photo_medium_url', models.URLField(blank=True, max_length=255)),
                ('photo_small_url', models.URLField(blank=True, max_length=255)),
                ('list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='backend.userslist')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('username', models.CharField(max_length=50, null=True, unique=True)),
                ('is_dev', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('date', models.DateField(auto_now_add=True)),
                ('players_count', models.PositiveSmallIntegerField(choices=[(4, 4), (8, 8)], default=8)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('leaderboard', models.JSONField(default=list)),
            ],
        ),
    ]
